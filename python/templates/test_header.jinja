import sendgrid
import json
from sendgrid import SendGridAPIClient
from sendgrid.version import __version__
try:
    import unittest2 as unittest
except ImportError:
    import unittest
import os
import subprocess
import sys
import time

host = "http://localhost:4010"

class UnitTests(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.host = host
        cls.path = '{0}{1}'.format(os.path.abspath(os.path.dirname(__file__)), '/..')
        cls.sg = sendgrid.SendGridAPIClient(host=host, path=cls.path)
        if os.path.isfile('/usr/local/bin/prism') == False:
            if sys.platform != 'win32':
                try:
                    p1 = subprocess.Popen(["curl", "https://raw.githubusercontent.com/stoplightio/prism/master/install.sh"], stdout=subprocess.PIPE)
                    p2 = subprocess.Popen(["sh"], stdin=p1.stdout, stdout=subprocess.PIPE)
                except Exception as e:
                    print("Error downloading the prism binary, you can try downloading directly here (https://github.com/stoplightio/prism/releases) and place in your /user/local/bin directory", e.read())
                    sys.exit()
            else:
                print("Please download the Windows binary (https://github.com/stoplightio/prism/releases) and place it in your /usr/local/bin directory")
                sys.exit()
        print("Activating Prism (~20 seconds)")
        devnull = open(os.devnull, 'w')
        cls.p = subprocess.Popen(["prism", "run", "-s", "https://raw.githubusercontent.com/sendgrid/sendgrid-oai/master/oai_stoplight.json"], stdout=devnull, stderr=subprocess.STDOUT)
        time.sleep(15)
        print("Prism Started")

    def test_apikey_init(self):
        self.assertEqual(self.sg.apikey, os.environ.get('SENDGRID_API_KEY'))

    def test_useragent(self):
        useragent = '{0}{1}{2}'.format('sendgrid/', __version__, ';python')
        self.assertEqual(self.sg.useragent, useragent)

    def test_host(self):
        self.assertEqual(self.sg.host, self.host)

