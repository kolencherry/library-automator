package com.sendgrid;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class SendGridTest {

  private final String SENDGRID_API_KEY = "";

  public Map<String,String> buildDefaultHeaders() {
    SendGrid sg = new SendGrid(SENDGRID_API_KEY);
    Map<String,String> requestHeaders = new HashMap<String, String>();
    requestHeaders.put("Authorization", "Bearer " + SENDGRID_API_KEY);
    String USER_AGENT = "sendgrid/" + sg.getLibraryVersion() + ";java";
    requestHeaders.put("User-agent", USER_AGENT);
    return requestHeaders;
  }

  @Test
  public void testInitialization() {
    SendGrid sg = new SendGrid(SENDGRID_API_KEY);
    Assert.assertEquals(sg.getHost(), "api.sendgrid.com");
    Assert.assertEquals(sg.getVersion(), "v3");
    Map<String,String> requestHeaders = buildDefaultHeaders();
    Assert.assertEquals(sg.getRequestHeaders(), requestHeaders);
  }

  @Test
  public void testLibraryVersion() {
    SendGrid sg = new SendGrid(SENDGRID_API_KEY);
    Assert.assertEquals(sg.getLibraryVersion(), "3.0.0");
  }

  @Test
  public void testVersion() {
    SendGrid sg = new SendGrid(SENDGRID_API_KEY);
    sg.setVersion("v4");
    Assert.assertEquals(sg.getVersion(), "v4");
  }

  @Test
  public void testRequestHeaders() {
    SendGrid sg = new SendGrid(SENDGRID_API_KEY);
    Map<String,String> requestHeaders = buildDefaultHeaders();

    sg.addRequestHeader("Test", "one");
    requestHeaders.put("Test", "one");
    Assert.assertEquals(sg.getRequestHeaders(), requestHeaders);

    sg.removeRequestHeader("Test");
    requestHeaders.remove("Test");
    Assert.assertEquals(sg.getRequestHeaders(), requestHeaders);
  }

  @Test
  public void testHost() {
    SendGrid sg = new SendGrid(SENDGRID_API_KEY);
    sg.setHost("api.new.com");
    Assert.assertEquals(sg.getHost(), "api.new.com");
  }



